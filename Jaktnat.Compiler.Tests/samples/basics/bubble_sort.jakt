/// Expect:
/// - output: "1\n2\n8\n9\n13\n22\n25\n50\n"

// HACK: for now, replaced .size() on arrays with .Length

fn bubble_sort(mut values: [i64]) {
    mut i = 0
    while i < values.Length as! i64 - 1 {
        mut j = 0
        while j < (values.Length as! i64) - i - 1 {
            if values[j] > values[j + 1] {
                let tmp = values[j]
                values[j] = values[j + 1]
                values[j + 1] = tmp
            }
            ++j
        }
        ++i
    }
}

fn main() {
    // Jaktnat change, was: mut v = [25, 13, 8, 1, 9, 22, 50, 2]
    // Changed because literals are i32 currently and not implicitly convertible to i64 or vice versa
    // Originally considered having literals be i64, but then you have the problem the other way...
    // Better to stick to .NET/C# semantics of having non-prefixed integers be i32 instead.
    // Therefore, we're giving each of these a suffix.
    mut v = [25i64, 13i64, 8i64, 1i64, 9i64, 22i64, 50i64, 2i64]

    bubble_sort(values: v)
    mut i = 0
    while i < v.Length as! i64 {
        println("{}", v[i])
        ++i
    }
}